{"version":3,"sources":["assets/logo.svg","helpers/declOfNum.js","components/Ticket.js","components/Filter.js","App.js","index.js"],"names":["module","exports","number","titles","Math","min","decorateValues","val","formatTime","date","getHours","getMinutes","stopsText","props","ticket","className","price","src","carrier","alt","segments","map","option","index","key","origin","destination","dateStartStr","duration","dateStart","Date","dateArrival","getTime","inOuTtime","time","toFixed","split","hours","minutes","formatDuration","stops","length","declOfNum","join","sort","labelText","stop","type","name","checked","filteredBy","includes","onChange","handleChange","App","state","isLoading","tickets","errorText","activeBtn","cheapest","fastest","baseTickets","attempts","sortTickets","bind","filterTickets","handleSortChange","handleFilterChange","fetch","then","data","json","searchId","catch","e","console","error","Error","id","this","connectToDb","item","forEach","segment","push","setState","findOptimal","checkbox","target","filter","JSON","parse","stringify","btn","classList","remove","add","dataset","a","b","findCheapest","findFastest","reduce","logo","Filter","data-sort","onClick","Ticket","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.78e5f118.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.0c089234.svg\";","/**\n * Функция склонения числительных в русском языке\n * 'Я знаю 'declOfNum(5, ['иностранный язык', 'иностранных языка', 'иностранных языков']);\n * @param number\n * @param titles\n */\n\nexport default function (number, titles) {\n    let cases = [2, 0, 1, 1, 1, 2];\n    return titles[ (number%100 > 4 && number %100 < 20) ? 2 : cases[Math.min(number%10, 5)] ];\n}","import React from 'react';\nimport declOfNum from '../helpers/declOfNum';\nimport '../styles/components/ticket.scss';\n\nconst decorateValues = val => val < 10 ? `0${val}` : val;\n\nconst formatTime = date => `${decorateValues(date.getHours())}:${decorateValues(date.getMinutes())}`;\n\nconst inOuTtime = (dateStartStr, duration) => {\n    const dateStart = new Date(dateStartStr);\n    const dateArrival = new Date(dateStart.getTime() + duration * 60 * 1000);\n\n    return `${formatTime(dateStart)} - ${formatTime(dateArrival)}`\n};\n\nconst formatDuration = duration => {\n    const time = (duration / 60).toFixed(2).split('.');\n    let hours = +time[0];\n    let minutes = +time[1];\n\n    if(minutes > 60) {\n        minutes -= 60;\n        hours += 1;\n    }\n\n    return `${hours}ч ${minutes}м`\n};\n\nconst stopsText = ['пересадка','пересадки','пересадок'];\nconst createStopsText = val => declOfNum(val,stopsText);\n\nexport default function (props) {\n    const ticket = props.ticket;\n\n    return (\n        <div className=\"ticket\">\n            <div className=\"ticket__top\">\n                <span className=\"ticket__price\">{ ticket.price } Р</span>\n                <img src={`https://pics.avs.io/99/36/${ticket.carrier}.png`} className=\"ticket__logo\" alt=\"logo\" />\n\n            </div>\n            { ticket.segments.map((option, index) =>\n                <div className=\"ticket__options\" key={index}>\n                    <div className=\"ticket__info\">\n                        <span>{ option.origin } - { option.destination }</span>\n                        <span>{ inOuTtime(option.date, option.duration) }</span>\n                    </div>\n                    <div className=\"ticket__info\">\n                        <span>В пути</span>\n                        <span>{ formatDuration(option.duration) }</span>\n                    </div>\n                    { option.stops.length ?\n                        <div className=\"ticket__info\">\n                            <span>{option.stops.length} { createStopsText(option.stops.length) }</span>\n                            <span>\n                                { option.stops.join(', ') }\n                            </span>\n                        </div>\n                        :\n                        ''\n                    }\n\n                </div>\n            )}\n        </div>\n    );\n}","import React from 'react';\nimport declOfNum from '../helpers/declOfNum';\nimport '../styles/components/filter.scss';\n\nexport default function (props) {\n    const stops = props.stops.sort();\n    const labelText = ['пересадка','пересадки','пересадок'];\n    const createLabelText = val => {\n\n        if (val > 0)\n            return `${val} ${declOfNum(val, labelText)}`;\n        else if (val === 0)\n            return 'Без пересадок';\n        else\n            return 'Все';\n    };\n\n    return (\n        <div className=\"filter\">\n            <div className=\"filter__title\">Количество пересадок</div>\n\n            { stops.map((stop, index) =>\n                <label className=\"filter__checkbox\"\n                       key={index}>\n                    <input type=\"checkbox\"\n                           name={stop}\n                           checked={props.filteredBy.includes(stop)}\n                           onChange={props.handleChange}/>\n                    <span>{ createLabelText(stop) }</span>\n                </label>\n            )}\n        </div>\n    );\n}","import React, { Component } from 'react';\nimport logo from './assets/logo.svg';\nimport './styles/components/app.scss';\n\nimport Ticket from './components/Ticket';\nimport Filter from './components/Filter';\n\nexport default class App extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isLoading: true,\n            tickets: [],\n            stops: [],\n            filteredBy: [-1],\n            errorText: '',\n            activeBtn: null, /* DOM node */\n            cheapest: null,\n            fastest: null\n        };\n\n        this.baseTickets = [];\n        this.attempts = 0;\n\n        this.sortTickets = this.sortTickets.bind(this);\n        this.filterTickets = this.filterTickets.bind(this);\n        this.handleSortChange = this.handleSortChange.bind(this);\n        this.handleFilterChange = this.handleFilterChange.bind(this);\n    }\n\n    async componentDidMount() {\n        const id = await fetch('https://front-test.beta.aviasales.ru/search')\n            .then(data => data.json())\n            .then(data => data.searchId)\n            .catch(e => console.error(new Error(e)));\n\n        await this.connectToDb(id);\n    }\n\n    async connectToDb(id) {\n        try {\n             await fetch(`https://front-test.beta.aviasales.ru/tickets?searchId=${id}`)\n                .then(data => data.json())\n                .then(data => {\n                    const baseTickets = data.tickets.map((item, index) => {\n                        item['id'] = index;\n                        return item;\n                    });\n\n                    const stops = [-1]; /* 'Все пересадки' */\n                    baseTickets.forEach(ticket => {\n                        ticket.segments.forEach(segment => {\n                            if(!stops.includes(segment.stops.length))\n                                stops.push(segment.stops.length)\n                        })\n                    });\n\n                    /* console.timeEnd: 0.662109375ms\n                    let stops = data.tickets.reduce((arr, ticket) => {\n                        const stops = ticket.segments.map(segment => segment.stops.length);\n                        return [...arr,...stops];\n                    }, []);\n                    stops = Array.from(new Set(stops))\n                    console.timeEnd: 1.3681640625ms, 3.985107421875ms, 8.004150390625ms */\n\n                    this.baseTickets = baseTickets;\n\n                    this.setState({ tickets: baseTickets, stops, isLoading: false }, this.findOptimal)\n                })\n\n        } catch (e) {\n            console.error(e);\n\n            if(this.attempts++ < 3)\n                await this.connectToDb(id);\n            else\n                this.setState({ errorText: 'что-то пошло не так :(', isLoading: false });\n        }\n    }\n\n    handleFilterChange(e) {\n        const checkbox = e.target;\n        const val = +checkbox.name;\n        let filteredBy = this.state.filteredBy;\n\n        if(checkbox.checked) {\n\n            if(val === -1) {\n                filteredBy = [-1];\n            } else {\n                filteredBy = filteredBy.filter(item => item !== -1);\n                filteredBy.push(val);\n            }\n\n        } else {\n            filteredBy = filteredBy.filter(item => item !== val);\n\n            if(filteredBy.length === 0)\n                filteredBy.push(-1);\n        }\n\n        this.setState({ filteredBy }, this.filterTickets);\n    }\n\n    filterTickets() {\n        let tickets = JSON.parse(JSON.stringify(this.baseTickets));\n        const stops = this.state.filteredBy;\n\n        if(stops[0] !== -1)\n            tickets = tickets.filter(ticket => {\n                ticket.segments = ticket.segments.filter(segment => stops.includes(segment.stops.length));\n                return ticket.segments.length;\n            });\n\n        this.setState({ tickets }, this.sortTickets);\n    }\n\n    handleSortChange(e) {\n        const btn = e.target;\n        let activeBtn =  this.state.activeBtn;\n\n        if(activeBtn)\n            activeBtn.classList.remove('active');\n\n        if(activeBtn === btn) {\n            activeBtn = null;\n        } else {\n            btn.classList.add('active');\n            activeBtn = btn;\n        }\n\n        this.setState({ activeBtn }, this.sortTickets);\n    }\n\n    sortTickets() {\n        let tickets = this.state.tickets;\n        const activeBtn = this.state.activeBtn;\n\n        if(activeBtn)\n            switch (activeBtn.dataset.sort) {\n                case 'cheapest':\n                    tickets = tickets.sort((a,b) => a.price - b.price);\n                    break;\n                default:\n                    tickets = tickets.map(ticket => {\n                        ticket.segments = ticket.segments.sort((a,b) => a.duration - b.duration);\n                        return ticket\n                    }).sort((a,b) => a.segments[0].duration - b.segments[0].duration);\n                    break;\n            }\n        else\n            tickets = tickets.sort((a,b) => a.id - b.id);\n\n        this.setState({ tickets }, this.findOptimal);\n    }\n\n    findOptimal() {\n        this.findCheapest();\n        this.findFastest();\n    }\n\n    findCheapest() {\n        let cheapest = this.state.tickets.reduce((cheapest, item) => {\n            return item.price < cheapest ? item.price : cheapest;\n        }, this.state.tickets[0].price);\n\n        this.setState({ cheapest });\n    }\n\n    findFastest() {\n        let fastest = {\n            item: this.state.tickets[0],\n            duration: this.state.tickets[0].segments[0].duration,\n        };\n\n        this.state.tickets.forEach(item => {\n\n            item.segments.forEach(segment => {\n                const duration = segment.duration;\n\n                if(duration < fastest.duration)\n                    fastest = { item, duration }\n            })\n        });\n\n        this.setState({ fastest: fastest.item.price });\n    }\n\n\n\n    render() {\n        return (\n            <div className=\"container\">\n                { this.state.isLoading ?\n                    <div className=\"app-loader\"><span></span><span></span><span></span><span></span></div>\n                    :\n                    <div className=\"app\">\n                        <img src={logo}\n                             className=\"app__logo\"\n                             alt=\"logo\" />\n                        <div className=\"app__inner\">\n\n                            <Filter stops={this.state.stops}\n                                    filteredBy={this.state.filteredBy}\n                                    handleChange={this.handleFilterChange}/>\n\n                            <div className=\"app__main\">\n                                <div className=\"app__sort\">\n                                    <button type=\"button\"\n                                            data-sort=\"cheapest\"\n                                            onClick={this.handleSortChange}>Самый дешевый <span>{ this.state.cheapest }</span></button>\n                                    <button type=\"button\"\n                                            data-sort=\"fastest\"\n                                            onClick={this.handleSortChange}>Самый быстрый <span>{ this.state.fastest }</span></button>\n                                </div>\n                                { this.state.errorText !== '' ?\n                                    <div className=\"app__error\">{this.state.errorText}</div>\n                                    :\n                                    this.state.tickets.map((ticket, index) =>\n                                        <Ticket ticket={ticket}\n                                                key={index} />\n                                    )\n                                }\n                            </div>\n                        </div>\n                    </div>\n                }\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/fonts.scss';\nimport './styles/index.scss';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);"],"sourceRoot":""}